# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
   tags:
    - testing_*
    
jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Download Dalamud
      run: |
        Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/latest.zip -OutFile latest.zip
        Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"
    - name: Build
      run: |
         $ver = '${{ github.ref_name }}' -replace 'testing_'
         dotnet build --no-restore --configuration Debug --nologo -p:Version=$ver -p:FileVersion=$ver -p:AssemblyVersion=$ver
    - name: write version into json
      run: |
        $ver = '${{ github.ref_name }}' -replace 'testing_'
        $path = './ClickCast/bin/x64/Debug/ClickCast.json'
        $json = Get-Content -Raw $path | ConvertFrom-Json
        $json.AssemblyVersion = $ver
        $content = $json | ConvertTo-Json
        set-content -Path $path -Value $content
    - name: Archive
      run: Compress-Archive -Path ClickCast/bin/x64/Debug/* -DestinationPath ClickCast.zip
    - name: Upload artifacts
      uses: actions/upload-artifact@v4.6.2
      with:
        path: ./ClickCast/bin/x64/Debug/*
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ClickCast ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # pull id from above
        asset_path: ./ClickCast.zip
        asset_name: ClickCast.zip
        asset_content_type: application/zip
    - name: Write out repo.json
      run: |
        $verT = '${{ github.ref_name }}'
        $ver = $verT -replace 'testing_'
        $path = './repo.json'
        $json = Get-Content -Raw $path | ConvertFrom-Json
        $json[0].TestingAssemblyVersion = $ver
        $json[0].DownloadLinkTesting = $json.DownloadLinkTesting -replace '[^/]+/ClickCast.zip',"$verT/ClickCast.zip"
        $content = $json | ConvertTo-Json -AsArray
        set-content -Path $path -Value $content

    - name: Commit repo.json
      run: |
        git config --global user.name "Actions User"
        git config --global user.email "actions@github.com"
        git fetch origin master
        git checkout master
        git add repo.json
        git commit -m "[CI] Updating repo.json for ${{ github.ref_name }}" || true
        git push origin master
